STEP1  : https://labs.vinsys.com
------------------------
angular02/angular4us#2
angular10/angular4us#10
angular20/angular4us#20

ctrl+alt+shift --> OPEN THE WINDOW --> 

WIN # buttn does work inside the browser 

cmd prompt :- 

npm -v 

Step1 : create a folder myapp1 
mkdir myapp1 

cd myapp1 

c:\myapp1> npm init -y 

type package.json 






All typscript files end with .ts 
A typescript file is not a mandatory file that should 
contain a class

But typscript can contain classes , interfaces , abstract, classes, constrcutors, methods 

imports other clases 
export my classes for others to use 

How to declare a class in type script 
class <ClasName> {
	
}

what are the members of a class 

class Hello {
	i:number = 10; 
	constructor(){
	}
	private add(a:number , b:number , c=10):number {

	}
}

interface IHello {
	addThis();
}

abstract class SomeHello implements IHello {
}
-----------------------------------------------------------
Customer.ts 

If you create a new File Departement.ts 
and expect to use Customer in the Department then its 
your responsibility to first export the Customer either 
export class Customer {}
export default class Customer{} // deafult can be only one 

the other side which want to use the class will use :- 
import {Customer}  from './filnamewhichcontainsCustomer'



.ts extension file 
the file must necessarily not be class name 
one .ts file can have many class and interface and scripts 
a typescript can have clases 
a class a constructor() // single 
a class can have methods / functions 
a class can have variables 
a class can have access modifiers 
a class can be invoked  new ClassName()
a class to be exported if its to be used in another file 
a interface also also need to exported 
a interdace i a contract and has only abstract methds 
a class can extend other clases but it has call super 
	for the constructor 
a class can inherit parent class methods 
a class can implement interface but has to implement all the 
	abstract method or call itself abstract 
tyep scripts support passing paramter to method 
type script type number, string, any , boolean  : 
type script is a syntactical check and is case sensitive 
type script allows you to define packages (folders )
all imports in typescripts a referring to a file 
when imports are done .ts extesnsion is not to be provided 
tsc is compiler that compiles type script to js
ALl relative file and classes containrin those files are compiled when you compile one of the ts files 
Typescript is object oriented you need to undestadn the 
finally it generates the javascript 

import
export 
inherit 
class 
constructor 
super 
this 
tsc 





everything is class or interface 
evertything has to exported if it needs to imported 
a class can have a cosntructor but only one 
a class implements a interface then it must implement the interface method or declare it self as abstract 
a instance of class  new ClassName(); 
the typscript allows you to export as well as import 
you export classes adn you import classes from files 
you have lambda's : anonymous functions 


|==== models 
		 |---- User (*)
		 class User {
			constructor(private username:string, private password:string, private group:string){}
	     ) 
		 }
		 }
		 |---- Group (1)
		 class Group{
		 		groupname
		 		users = [] ;
		 		constructor(groupname){
		 				this.groupname =groupname;
		 		}
		 }
|-----dao
	    |------ export interface IDAO{
	    		  save(obj)
	    		  update(obj); 
	    		  delete(obj); 
	    		  find(obj); 
	    		  findAll(obj); 
	    
	    }
 	    		export class UserDAO  implements IDAO{
  					save(obj){

  					}
	    		  update(obj){

	    		  } 
	    		  delete(obj){

	    		  } 
	    		  find(obj){

	    		  } 
	    		  findAll(obj){

	    		  } 
	    
 	    		} 
	    		export class GroupDAO Implements IDAO{

	    		  save(obj){
	    		  	
	    		  }
	    		  update(obj){

	    		  } 
	    		  delete(obj){

	    		  } 
	    		  find(obj){

	    		  } 
	    		  findAll(obj){

	    		  } 
	    		} 
|---- services 
	import {User} from '../models/User';

		|---- export class UserManagement{
					createUser(user:User){};
					createGroup(group: Group){}; 
					getUsers():User[]{}; 
					getGroups(): Group[]{}; 
					getUsersForGroup():User[]{}; 
		} 
		
|---- main.ts --> Script // no class  

		va uam = new UserManagement(); 
		uam.createUser(); 



















https://github.com/nileshdevdas/ng4.git


export class ClassName {
	constructor(private a : number) {
		this.a ; 
	}

	test():string {
		return "xxxx"
	}
} 

export interface  IInterfaceName {
	test(); 
}

export class TestClass implent IInterfaceName {
	// i must implement all the methods 
}

class can extends a class 


class A {
	
}

class B extends A {
	constructor(){
		super()
	}


}


We do import and export 

import  {ClassName}  from  './filename'
import    from './' ; if there is not class name 

Further to this we have to discuss  
tsc  is compile i compile the file with tsc where the output is 
.js 

we could create modules/packages /folders 
where we can keep our files 
these are just segregation of your files to keep them 
in organized manner 

what is package.json // dependencies 

npm init -y 


with 2 things (tools , libararies)

tools are generally global install 

npm i -g typescript ---> 

npm -i  bootstrap (local install )

node_modules --> 




That all the applicationd desing in angular is typscript :- 
-----------------------------------------------------------------
The angular requires a tool: 
the tool is know angular/cli 

npm install -g @angular/cli@6.2.4

ng -v 


How to create  a new angular project 

ng  new imdb







in my mainlayout i will need to add a array

movies = [
	{name : '', year : '' , genre : '' , banner : ''}, 
	{name : '', year : '' , genre : '' , banner : ''}, 
	{name : '', year : '' , genre : '' , banner : ''}, 
	{name : '', year : '' , genre : '' , banner : ''}
]

<table class="table table-striped table-bordered">
	<tr *ngFor="let movie of movies">
		<td>{{movie.name}}</td>
	</tr>
</table>



To Access  http Service : 

1. Add HttpClientModule in your app.module.ts 

	imports : [ HttpClientModule]


2. Decide now where you wish to use the service --> 
	you MainLayout
		constructor(private http:HttpClient){}

		ngInit(){
			http.get('url').subscribe((result)=>{
				// logic
			})
		}


Step app.module.ts 

import {HttpClientModule} from '@angular/common/http'; 


imports : [
	BrowserModule, 
	HttpClientModule
]


Open you mainlayout.component.ts 

export class MainLayoutComponent implment OnNgInit {
	
	constructor(private http:HttpClientModule){}

}


What is a component 
component is typescript Class 
What makes a component a componet 

@Component ({
	selector : '', 
	templateUrl : '', 
	styleUrls : []
})
export class  MyComponent  implements NgOnInit
{
	var// in  the component ---> whenever the state 
	changes if the state is bound to the // html 
	that changes the rendering also 
	
	constructor(http:HttpClient){

	}
	ngInit(){
	// element -->  
		// give you the gurantee tha the component has intiialzed
	}

	methods(){

	}
}


these components 

movielist 
moviedetail 
tvseries 
seriesratings 
event 
eventbooking 

A service is TypeScript Class 

export class MyService {
	
}
What makes a service a service and not a component
A service is a service 
@Injectible({
	providedIn : 'root'
})
















































































































































































































































